Versioning Rules:
  Major: Only set when the project reaches the state it was meant to be from the start.
  Minor: This changes whenever significant feature changes have been made.
  Commit: This increases anytime a commit has been made.

===============================================
               VERSION HISTORY
              major.minor.commit
===============================================

v0.8.0 - Restructure Custom Page Logic
change: move custom pages to their own module

v0.7.1 - Documentation
add: inline documentation
fix: strip http header attribute name from cookie names
change: update README.md
change: variable name query to params in relevant files

v0.7.0 - Cookie Support
add: header and cookie values to request query for internal use
add: inline documentation on changes made to request query
change: pass the http request headers into processUrl.py

v0.6.3 - Multiple Upload Parameters
add: ability to process multiple query arguments from urls
add: data dump for thread-related exception in server.py
fix: uncommented a couple lines that were left commented

v0.6.2 - Uploads and Filepaths
add: support more upload types
add: ensure all directories to be used exist
add: build non-existing paths for multiplatform
change: make directory building more modular
change: print file access exceptions when thrown

v0.6.1 - Change Versioning System
I've found that all of my "feature" additions are being recorded as "stable" commits.
This caused the counter for recording feature changes to not reflect progress made.
Because of this there will only be three numbers in the version.
The current version has been updated to reflect the progress that has been made.

The first being major release; Only set when the project reaches the state it was meant to be from the start,
the second being minor release; This changes whenever significant feature changes have been made,
and the last being commit; This increases anytime a commit has been made.

v0.1.0.1 - Mime Types and Upload
add: proper mime type handling
add: rudimentary file upload handling (static name and jpeg only)
fix: change headers from list of lists to list of tuples
change: all data written is now bytes-type

v0.0.5.2 - Minor Fixes
fix: update missed call to new function name
fix: command.py printing false error when calling read/set config

v0.0.5.1 - Thread Server and Windowed Interface
add: multi-thread support to server
add: feedback to windowed interface
fix: interface now waits for user input when requested by the program
change: asset loading and gui display happen at the same time
change: variable and function names
remove: un-needed prints to terminal

v0.0.5.0 - Windowed Interface Stable
add: inline documentation
fix: logical branch error in command.py
change: update README.md

v0.0.4.3 - Move Config Help Text
change: move config help text to command.py

v0.0.4.2 - Windowed Interface Integration
add: store a reference to the main frame object for external use
add: seperate thread to run the server
add: support for threaded operations on windowed interface
add: targeted commands with branching paths to command.py
add: help, quit and config commands
fix: run main gui on the main thread
change: move command.py to window module
remove: console module

v0.0.4.1 - Inline Documentation and Minor Fixes
add: inline documentation
fix: add text to status frame
fix: remove redundant code

v0.0.4.0 - Create Window Interface
add: window with status/display/input frames
add: text to status frame
add: text and text entry box to the input frame
add: canvas.frame.text object tree to display frame
add: scrollbar to display frame
add: window resizing
add: autoscroll as text is added to display frames text
add: auto text wrapping to text in display frame

v0.0.3.2 - Console Fix and Restructure
add: seperate module to interpret console commands
fix: race condition due do to incorrect reference

v0.0.3.1 - Start Adding Simple Command Terminal
add: threads for collecting and processing terminal input

v0.0.3.0 - Subpages Stable
fix: error in page path generation
change: html edits
change: remove print functions

v0.0.2.6 - Subpage Error Fixes
add: subpage within a subpage
fix: error in passing urlSplit to subpages
fix: error in page path generation
change: update README.md

v0.0.2.5 - Change Webpage Constructor
change: webpage name/path construction

v0.0.2.4 - Minor Fixes
fix: reference to stored data in pageIndex
fix: set background color in css

v0.0.2.3 - Manage Pages
add: webpage logic template file
add: class to manage available pages
fix: move access to subpages to their parent page's logic
fix: remove possible trailing / from url
fix: add error response for when a page fails to be found due to internal error

v0.0.2.2 - Add Support for Subpages
add: webpage class to handle page logic
fix: seperate the actions associated with each page to its own file
fix: read the favicon in the www base folder whenever favicon is requested
fix: make get/send data requests on the main page seperate commands
fix: make index.html load both with and without a trailing slash on its base url

v0.0.2.1 - Start Server Logic Overhaul
add: create concept of webpage class to handle page logic
fix: adjust the url process flow to be easier to follow and section
remove: stray unused file

v0.0.2.0 - Configuration Stable
fix: move accessFile.py to directoryIndex where it makes more sense to exist
fix: update imports of accessFile.py

v0.0.1.3 - Configuration Terminal Arguments
add: support to set configuration options as command line arguments

v0.0.1.2 - Configuration Import Updates
add: module to import configuration settings
add: method to set the base directory
fix: make path to config file a relative path
remove: accessFile read/write file default argument for basepath

v0.0.1.1 - Quit on Keyboard Interrupt
add: quit command for server on keyboard interrupt

v0.0.1.0 - Restructure and list Http Status Codes
add: main.py
add: check to determine responses to status codes returned by server logic
add: module to hande internal server logic
add: classes to contain http request/response data
add: support for loading external config file on startup
fix: prevent directory traversal attacks when reading/writing files
fix: give 415 media not supported response for POSTing unsupported media
change: move server logic in request parser to its own file
change: file names to make more sense
change: requests read for files, actions or index based on the last bit of the url
change: requested web page files are not compared to a whitelist
remove: dead code in request processer

v0.0.0.0 - Initial Commit
add: listens for and send http requests over socket
add: basic webserver logic
add: data hashing and encryption